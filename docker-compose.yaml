x-jwtauth-environment: &jwtauth-environment
  JWTAUTH_DB_HOST: ${POSTGRES_HOST}
  JWTAUTH_DB_PORT: ${POSTGRES_PORT}
  JWTAUTH_DB_NAME: ${POSTGRES_DB_NAME}
  JWTAUTH_DB_USER: ${POSTGRES_DB_USER}
  JWTAUTH_DB_PASSWORD: ${POSTGRES_DB_PASSWORD}

services:
  postgres:
    image: postgres:17-alpine
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    environment:
      - POSTGRES_DB=${POSTGRES_DB_NAME}
      - POSTGRES_USER=${POSTGRES_DB_USER}
      - POSTGRES_PASSWORD=${POSTGRES_DB_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_DB_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  jwt-auth:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        MODULE_FOLDER_NAME: "auth"
    ports:
      - "8080:8080"
    networks:
      - app-network
    environment:
      <<: *jwtauth-environment
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "wget --spider -q http://localhost:8080/actuator/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s


volumes:
  postgres-data:
    driver: local

networks:
  app-network:
    driver: bridge